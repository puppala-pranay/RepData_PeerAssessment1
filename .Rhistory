1+1
example <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8), nrow = 4, ncol = 2)
View(example)
View(example)
sessionInfo()
install.packages("KernSmooth")
library(KernSmooth, lib.loc = "C:/Program Files/R/R-4.1.1/library")
setwd("~/RProjects/RepData_PeerAssessment1")
data <- read.csv("./activity/activity.csv")
head(data)
data <- read.csv("./activity/activity.csv")
data$date <- as.Date(data$date,format = "%Y-%m-$d")
head(data)
data <- read.csv("./activity/activity.csv")
data$date <- as.Date(data$date)
head(data)
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, data, sum,na.rm=TRUE))
hist(tot_steps_each_day)
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, data, sum,na.rm=TRUE))
tot_steps_each_day
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, date, sum,na.rm=TRUE))
tot_steps_each_day
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, date, sum,na.rm=TRUE))
hist(tot_steps_each_day)
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, date, sum,na.rm=TRUE))
tot_steps_each_day
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, date, sum,na.rm=TRUE))
tot_steps_each_day
hist(names(tot_steps_each_day),tot_steps_each_day)
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, date, sum,na.rm=TRUE))
tot_steps_each_day
all_dates <- unique(data$date)
hist(all_dates,tot_steps_each_day)
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, date, sum,na.rm=TRUE))
tot_steps_each_day
all_dates <- unique(data$date)
all_dates
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, date, sum,na.rm=TRUE))
all_dates <- unique(data$date)
hist(tot_steps_each_day)
median(tot_steps_each_day)
mean(tot_steps_each_day)
# total steps on each day
tot_steps_each_day <- with(data,tapply(steps, date, sum,na.rm=TRUE))
all_dates <- unique(data$date)
hist(tot_steps_each_day)
cat("meadian  - ",median(tot_steps_each_day),"\n")
cat("mean  - ",mean(tot_steps_each_day),"\n")
avg_steps_each_interval <- with(data,tapply(steps, interval, mean,na.rm=TRUE))
all_intervals <- unique(data$interval)
plot(all_intervals,avg_steps_each_interval,type="l")
avg_steps_each_interval <- with(data,tapply(steps, interval, mean,na.rm=TRUE))
all_intervals <- unique(data$interval)
plot(all_intervals,avg_steps_each_interval,type="l")
max(avg_steps_each_interval)
avg_steps_each_interval <- with(data,tapply(steps, interval, mean,na.rm=TRUE))
all_intervals <- unique(data$interval)
plot(all_intervals,avg_steps_each_interval,type="l")
which.max(avg_steps_each_interval)
avg_steps_each_interval <- with(data,tapply(steps, interval, mean,na.rm=TRUE))
all_intervals <- unique(data$interval)
plot(all_intervals,avg_steps_each_interval,type="l")
avg_steps_each_interval <- with(data,tapply(steps, interval, mean,na.rm=TRUE))
all_intervals <- unique(data$interval)
plot(all_intervals,avg_steps_each_interval,type="l")
names(avg_steps_each_interval)[which.max(avg_steps_each_interval)]
